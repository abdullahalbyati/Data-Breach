df$`Year of Breach` <- as.character(df$`Year of Breach`)
df <-
filter(df, `Total Records` > 100)
df_1 <- filter(df, `Total Records` %in% 100:1000) %>% mutate(df_1, cost_per_record = Probability_of_Loss$estimated_average_cost[1]/`Total Records`)
View(df_1)
df_2 <- filter(df, `Total Records` %in% 1000:10000) %>% mutate(df_2, cost_per_record = Probability_of_Loss$estimated_average_cost[2]/`Total Records`)
df_2 <- filter(df, `Total Records` %in% 1000:10000) %>% mutate(df_2, cost_per_record = Probability_of_Loss$estimated_average_cost[2]/`Total Records`)
df_2 <- filter(df, `Total Records` %in% 1000:10000)
df_2 <- filter(df, `Total Records` %in% 1000:10000) %>% mutate(df_2, cost_per_record = Probability_of_Loss$estimated_average_cost[2]/`Total Records`)
View(df_2)
df_3 <- filter(df, `Total Records` %in% 10000:100000)
df_3 <- filter(df, `Total Records` %in% 10000:100000) %>% mutate(df_3, cost_per_record = Probability_of_Loss$estimated_average_cost[3]/`Total Records`)
df_4 <- filter(df, `Total Records` %in% 100000:500000)
df_4 <- df_4 %>% mutate(df_4, cost_per_record = Probability_of_Loss$estimated_average_cost[4]/`Total Records`)
View(df_4)
View(df_4)
df_5 <- filter(df, `Total Records` %in% 500000:1000000)
df_5 <- df_5 %>% mutate(df_5, cost_per_record = Probability_of_Loss$estimated_average_cost[5]/`Total Records`)
View(df_5)
df_1 <- filter(df, `Total Records` %in% 100:1000)
df_1 <- df_1 %>% mutate(df_1, cost_per_record = Probability_of_Loss$estimated_average_cost[1]/`Total Records`)
df_2 <- filter(df, `Total Records` %in% 1000:10000)
df_2 <- df_2 %>% mutate(df_2, cost_per_record = Probability_of_Loss$estimated_average_cost[2]/`Total Records`)
df_3 <- filter(df, `Total Records` %in% 10000:100000)
df_3 <- df_3 %>% mutate(df_3, cost_per_record = Probability_of_Loss$estimated_average_cost[3]/`Total Records`)
df_4 <- filter(df, `Total Records` %in% 100000:500000)
df_4 <- df_4 %>% mutate(df_4, cost_per_record = Probability_of_Loss$estimated_average_cost[4]/`Total Records`)
df_5 <- filter(df, `Total Records` %in% 500000:1000000)
df_5 <- df_5 %>% mutate(df_5, cost_per_record = Probability_of_Loss$estimated_average_cost[5]/`Total Records`)
df_6 <- filter(df, `Total Records` %in% 1000000:5000000)
df_6 <- df_6 %>% mutate(df_6, cost_per_record = Probability_of_Loss$estimated_average_cost[6]/`Total Records`)
df_7 <- filter(df, `Total Records` %in% 5000000:10000000)
df_7 <- df_7 %>% mutate(df_7, cost_per_record = Probability_of_Loss$estimated_average_cost[7]/`Total Records`)
df_8 <- filter(df, `Total Records` %in% 10000000:50000000)
df_8 <- df_8 %>% mutate(df_8, cost_per_record = Probability_of_Loss$estimated_average_cost[8]/`Total Records`)
df_9 <- filter(df, `Total Records` %in% 50000000:100000000)
df_9 <- df_9 %>% mutate(df_9, cost_per_record = Probability_of_Loss$estimated_average_cost[9]/`Total Records`)
df_10 <- filter(df, `Total Records` %in% 100000000:500000000)
df_10 <- df_10 %>% mutate(df_10, cost_per_record = Probability_of_Loss$estimated_average_cost[10]/`Total Records`)
df_11 <- filter(df, `Total Records` %in% 500000000:1000000000)
df_11 <- df_11 %>% mutate(df_11, cost_per_record = Probability_of_Loss$estimated_average_cost[11]/`Total Records`)
df_12 <- filter(df, `Total Records` %in% 1000000000:5000000000)
df_12 <- df_12 %>% mutate(df_12, cost_per_record = Probability_of_Loss$estimated_average_cost[12]/`Total Records`)
df_12 <- filter(df, `Total Records` %in% 1000000000:3000000000)
df_12 <- df_12 %>% mutate(df_12, cost_per_record = Probability_of_Loss$estimated_average_cost[12]/`Total Records`)
View(df_11)
df_12 <- filter(df, `Total Records` %in% 1000000000:3000000000)
View(df_12)
df_12 <- df_12 %>% mutate(df_12, cost_per_record = Probability_of_Loss$estimated_average_cost[12]/`Total Records`)
View(df_12)
df_complete <- bind_rows(df_1,df_2,df_3,df_4,df_5,df_6,df_7,df_8,df_9, df_10, df_11, df_12)
View(df_complete)
mean(df_complete$cost_per_record)
median(df_complete$cost_per_record)
sum(mean(df_1$cost_per_record),
mean(df_2$cost_per_record),
mean(df_3$cost_per_record),
mean(df_4$cost_per_record),
mean(df_5$cost_per_record),
mean(df_6$cost_per_record),
mean(df_7$cost_per_record),
mean(df_8$cost_per_record),
mean(df_9$cost_per_record),
mean(df_10$cost_per_record),
mean(df_11$cost_per_record),
mean(df_12$cost_per_record)
) / 12
sum(median(df_1$cost_per_record),
median(df_2$cost_per_record),
median(df_3$cost_per_record),
median(df_4$cost_per_record),
median(df_5$cost_per_record),
median(df_6$cost_per_record),
median(df_7$cost_per_record),
median(df_8$cost_per_record),
median(df_9$cost_per_record),
median(df_10$cost_per_record),
median(df_11$cost_per_record),
median(df_12$cost_per_record)
) / 12
View(df_1)
mean(Probability_of_Loss$estimated_average_cost)
View(df_3)
mean(df_3$cost_per_record)
skewness(c(mean(df_1$cost_per_record),
mean(df_2$cost_per_record),
mean(df_3$cost_per_record),
mean(df_4$cost_per_record),
mean(df_5$cost_per_record),
mean(df_6$cost_per_record),
mean(df_7$cost_per_record),
mean(df_8$cost_per_record),
mean(df_9$cost_per_record),
mean(df_10$cost_per_record),
mean(df_11$cost_per_record),
mean(df_12$cost_per_record)))
median(median(df_1$cost_per_record),
median(df_2$cost_per_record),
median(df_3$cost_per_record),
median(df_4$cost_per_record),
median(df_5$cost_per_record),
median(df_6$cost_per_record),
median(df_7$cost_per_record),
median(df_8$cost_per_record),
median(df_9$cost_per_record),
median(df_10$cost_per_record),
median(df_11$cost_per_record),
median(df_12$cost_per_record)
)
mean(df_3$cost_per_record)
View(df_complete)
View(df)
RUNS <- 10000
simulations <- rpert(RUNS, 0.005, 67, 10000)
mean(simulations$value)
mean(simulations)
simulations <- rpert(RUNS, 0.005, 67, 1000)
simulations <- rpert(RUNS, 0.005, 67, 1000)
mean(simulations)
df$estimated_cost <- mutate(df, estimated_cost = df$`Total Records` * 67)
View(df)
mean(df$estimated_cost)
df <- read_csv("PRC Data Breach Chronology - 1.13.20 - PRC Data Breach Chronology - 1.13.20.csv")
df <- df %>%
mutate(`Date Made Public` = as.Date(`Date Made Public`, format = "%m/%d/%Y"))
df$`Year of Breach` <- as.character(df$`Year of Breach`)
df <-
filter(df, `Total Records` > 100)
df <- mutate(df, estimated_cost = df$`Total Records` * 67)
mean(df$estimated_cost)
median(df$estimated_cost)
simulations <- rpert(RUNS, min(df$estimated_cost), mean(df$estimated_cost), max(df$estimated_cost))
mean(simulations)
RUNS <- 100000
simulations <- rpert(RUNS, min(df$estimated_cost), mean(df$estimated_cost), max(df$estimated_cost))
mean(simulations)
View(df)
ggplot(data = df, mapping = aes(x = `Date Made Public`, y = estimated_cost)) +
geom_point() +
theme_bw(base_size = 15) +
scale_x_date(date_labels = "%Y") +
scale_y_continuous(labels = scales::label_number_si()) +
ggrepel::geom_text_repel(data = df, aes(label = Company))
ggplot(data = df, mapping = aes(x = `Date Made Public`, y = estimated_cost)) +
geom_point() +
theme_bw(base_size = 15) +
scale_x_date(date_labels = "%Y") +
scale_y_continuous(labels = scales::label_number_si())
remove_outliers <- function(x, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
y
}
ggplot(data = df, mapping = aes(x = `Date Made Public`, y = remove_outliers(estimated_cost)) +
geom_point() +
theme_bw(base_size = 15) +
scale_x_date(date_labels = "%Y") +
scale_y_continuous(labels = scales::label_number_si())
ggplot(data = df, mapping = aes(x = `Date Made Public`, y = remove_outliers(estimated_cost))) +
geom_point() +
theme_bw(base_size = 15) +
scale_x_date(date_labels = "%Y") +
scale_y_continuous(labels = scales::label_number_si())
remove_outliers <- function(x, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(.1, .95), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
y
}
ggplot(data = df, mapping = aes(x = `Date Made Public`, y = remove_outliers(estimated_cost))) +
geom_point() +
theme_bw(base_size = 15) +
scale_x_date(date_labels = "%Y") +
scale_y_continuous(labels = scales::label_number_si())
remove_outliers <- function(x, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(.1, .99), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
y
}
ggplot(data = df, mapping = aes(x = `Date Made Public`, y = remove_outliers(estimated_cost))) +
geom_point() +
theme_bw(base_size = 15) +
scale_x_date(date_labels = "%Y") +
scale_y_continuous(labels = scales::label_number_si())
remove_outliers <- function(x, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(.1, .95), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
y
}
ggplot(data = df, mapping = aes(x = `Date Made Public`, y = remove_outliers(estimated_cost))) +
geom_point() +
theme_bw(base_size = 15) +
scale_x_date(date_labels = "%Y") +
scale_y_continuous(labels = scales::label_number_si())
remove_outliers <- function(x, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(.1, .99), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
y
}
ggplot(data = df, mapping = aes(x = `Date Made Public`, y = remove_outliers(estimated_cost))) +
geom_point() +
theme_bw(base_size = 15) +
scale_x_date(date_labels = "%Y") +
scale_y_continuous(labels = scales::label_number_si())
remove_outliers <- function(x, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(.1, .95), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
y
}
ggplot(data = df, mapping = aes(x = `Date Made Public`, y = remove_outliers(estimated_cost))) +
geom_point() +
theme_bw(base_size = 15) +
scale_x_date(date_labels = "%Y") +
scale_y_continuous(labels = scales::label_number_si())
remove_outliers <- function(x, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(.1, .98), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
y
}
ggplot(data = df, mapping = aes(x = `Date Made Public`, y = remove_outliers(estimated_cost))) +
geom_point() +
theme_bw(base_size = 15) +
scale_x_date(date_labels = "%Y") +
scale_y_continuous(labels = scales::label_number_si())
median(remove_outliers(df$estimated_cost))
mean(remove_outliers(df$estimated_cost))
df$estimated_cost <- remove_outliers(df$estimated_cost)
df
View(df)
df <- read_csv("PRC Data Breach Chronology - 1.13.20 - PRC Data Breach Chronology - 1.13.20.csv")
df <- df %>%
mutate(`Date Made Public` = as.Date(`Date Made Public`, format = "%m/%d/%Y"))
df$`Year of Breach` <- as.character(df$`Year of Breach`)
df <-
filter(df, `Total Records` > 100)
df <- mutate(df, estimated_cost = df$`Total Records` * 67)
df <- filter(df, quantile(df$estimated_cost) > .1 & quantile(df$estimated_cost) < .98)
df <- df %>% filter_all(all_vars(. < quantile(., 0.98, na.rm = TRUE)))
df <- df %>% filter_all(all_vars(. < quantile(., 0.98, na.rm = TRUE)))
df <- filter_all(df, quantile(df$estimated_cost) > .1 & quantile(df$estimated_cost) < .98)
df <- filter_all(df, all_vars(quantile(df$estimated_cost) > .1 & quantile(df$estimated_cost) < .98))
df <- filter_all(df, all_vars(estimated_cost > quantile(df$estimated_cost) > .1 & estimated_cost < quantile(df$estimated_cost) < .98))
df <- df %>% filter_all(all_vars(. < quantile(., 0.98, na.rm = TRUE)))
quantile(df$estimated_cost, 0.1)
quantile(df$estimated_cost, probs=c(.1, .98))
quant <- quantile(df$estimated_cost, probs=c(.1, .98))
quant <- as.tibble(quantile(df$estimated_cost, probs=c(.1, .98)))
View(quant)
quant <- quantile(df$estimated_cost, probs=c(.1, .98))
typeof(quant)
quantile(df$estimated_cost, probs=c(.1, .98))
quant <- as_tibble(as.list(quantile(df$estimated_cost, probs=c(.1, .98))))
View(quant)
df <- df %>% filter(estimated_cost <= quant$`10%` & estimated_cost >= quant$`98%`)
View(df)
df <- read_csv("PRC Data Breach Chronology - 1.13.20 - PRC Data Breach Chronology - 1.13.20.csv")
df <- df %>%
mutate(`Date Made Public` = as.Date(`Date Made Public`, format = "%m/%d/%Y"))
df$`Year of Breach` <- as.character(df$`Year of Breach`)
df <-
filter(df, `Total Records` > 100)
df <- mutate(df, estimated_cost = df$`Total Records` * 67)
quant <- as_tibble(as.list(quantile(df$estimated_cost, probs=c(.1, .98))))
df <- df %>% filter(estimated_cost <= quant$`10%` & estimated_cost >= quant$`98%`)
View(df)
df <- read_csv("PRC Data Breach Chronology - 1.13.20 - PRC Data Breach Chronology - 1.13.20.csv")
df <- df %>%
mutate(`Date Made Public` = as.Date(`Date Made Public`, format = "%m/%d/%Y"))
df$`Year of Breach` <- as.character(df$`Year of Breach`)
df <-
filter(df, `Total Records` > 100)
df <- mutate(df, estimated_cost = df$`Total Records` * 67)
df
df <- df %>% filter(estimated_cost > quant$`10%` & estimated_cost < quant$`98%`)
df
View(df)
ggplot(data = df, mapping = aes(x = `Date Made Public`, y = estimated_cost)) +
geom_point() +
theme_bw(base_size = 15) +
scale_x_date(date_labels = "%Y") +
scale_y_continuous(labels = scales::label_number_si())
mean(df$estimated_cost)
median(df$estimated_cost)
ggplot(data = df, mapping = aes(x = `Date Made Public`, y = estimated_cost)) +
geom_line() +
theme_bw(base_size = 15) +
scale_x_date(date_labels = "%Y") +
scale_y_continuous(labels = scales::label_number_si())
ggplot(data = df, mapping = aes(x = `Date Made Public`, y = mean(estimated_cost))) +
geom_line() +
theme_bw(base_size = 15) +
scale_x_date(date_labels = "%Y") +
scale_y_continuous(labels = scales::label_number_si())
ggplot(data = df, mapping = aes(x = `Date Made Public`, y = estimated_cost)) +
geom_line() +
theme_bw(base_size = 15) +
scale_x_date(date_labels = "%Y") +
scale_y_continuous(labels = scales::label_number_si()) +
stat_summary(fun = "mean", geom = "line")
ggplot(data = df, mapping = aes(x = factor(`Date Made Public`), y = estimated_cost)) +
geom_line() +
theme_bw(base_size = 15) +
scale_x_date(date_labels = "%Y") +
scale_y_continuous(labels = scales::label_number_si()) +
stat_summary(fun = "mean", geom = "line")
ggplot(data = df, mapping = aes(x = factor(`Date Made Public`), y = estimated_cost)) +
geom_line() +
theme_bw(base_size = 15) +
scale_x_discrete(date_labels = "%Y") +
scale_y_continuous(labels = scales::label_number_si()) +
stat_summary(fun = "mean", geom = "line")
ggplot(data = df, mapping = aes(x = `Date Made Public`, y = estimated_cost)) +
geom_line() +
theme_bw(base_size = 15) +
scale_x_discrete(date_labels = "%Y") +
scale_y_continuous(labels = scales::label_number_si()) +
stat_summary(fun = "mean", geom = "line")
df %>% group_by(`Year of Breach`) %>% summarise(mean(estimated_cost))
View(df)
df %>% group_by(`Year of Breach`) %>% summarise(mean(estimated_cost)) %>%
ggplot(aes(x = `Year of Breach`), y = `mean(estimated_cost)`) +
geom_point() + geom_line()
df %>% group_by(`Year of Breach`) %>% summarise(mean(estimated_cost)) %>%
ggplot(aes(x = `Year of Breach`, y = `mean(estimated_cost)`)) +
geom_point() + geom_line()
View(df)
df %>%
group_by(`Year of Breach`) %>%
summarise(mean(estimated_cost)) %>%
ggplot(aes(x = `Year of Breach`, y = `mean(estimated_cost)`)) +
geom_line()
df %>%
group_by(`Year of Breach`) %>%
filter(`Year of Breach` == "2020") %>%
summarise(mean(estimated_cost)) %>%
ggplot(aes(x = `Year of Breach`, y = `mean(estimated_cost)`)) +
geom_line()
df %>%
group_by(`Year of Breach`) %>%
filter(`Year of Breach` != "2020") %>%
summarise(mean(estimated_cost)) %>%
ggplot(aes(x = `Year of Breach`, y = `mean(estimated_cost)`)) +
geom_line()
df %>%
group_by(`Year of Breach`) %>%
filter(`Year of Breach` != "2020") %>%
summarise(mean(estimated_cost)) %>%
ggplot(aes(x = `Year of Breach`, y = `mean(estimated_cost)`)) +
geom_line() +
geom_point()
df %>%
group_by(`Year of Breach`) %>%
filter(`Year of Breach` != "2020") %>%
summarise(mean(estimated_cost)) %>%
ggplot(aes(x = `Year of Breach`, y = `mean(estimated_cost)`)) +
geom_line() +
geom_point(shape=21, color="black", fill="#69b3a2", size=6) +
theme_ipsum() +
df %>%
group_by(`Year of Breach`) %>%
filter(`Year of Breach` != "2020") %>%
summarise(mean(estimated_cost)) %>%
ggplot(aes(x = `Year of Breach`, y = `mean(estimated_cost)`)) +
geom_line() +
geom_point(shape=21, color="black", fill="#69b3a2", size=6) +
theme_ipsum()
df %>%
group_by(`Year of Breach`) %>%
filter(`Year of Breach` != "2020") %>%
summarise(mean(estimated_cost)) %>%
ggplot(aes(x = `Year of Breach`, y = `mean(estimated_cost)`)) +
geom_line() +
geom_point(shape=21, color="black", fill="#69b3a2", size=6)
df %>%
group_by(`Year of Breach`) %>%
filter(`Year of Breach` != "2020") %>%
summarise(mean(estimated_cost)) %>%
ggplot(aes(x = `Year of Breach`, y = `mean(estimated_cost)`)) +
geom_line(color="grey") +
geom_point(shape=21, color="black", fill="#69b3a2", size=6)
df %>%
group_by(`Year of Breach`) %>%
filter(`Year of Breach` != "2020") %>%
summarise(mean(estimated_cost)) %>%
ggplot(aes(x = `Year of Breach`, y = `mean(estimated_cost)`)) +
geom_line(color="grey") +
geom_point(shape=21, color="black", size=6)
df %>%
group_by(`Year of Breach`) %>%
filter(`Year of Breach` != "2020") %>%
summarise(mean(estimated_cost)) %>%
ggplot(aes(x = `Year of Breach`, y = `mean(estimated_cost)`)) +
geom_line(color="grey") +
geom_point(shape=21, size=6)
df %>%
group_by(`Year of Breach`) %>%
filter(`Year of Breach` != "2020") %>%
summarise(mean(estimated_cost)) %>%
ggplot(aes(x = `Year of Breach`, y = `mean(estimated_cost)`)) +
geom_line(color="grey") +
geom_point(size=6)
df %>%
group_by(`Year of Breach`) %>%
filter(`Year of Breach` != "2020") %>%
summarise(mean(estimated_cost)) %>%
ggplot(aes(x = `Year of Breach`, y = `mean(estimated_cost)`)) +
geom_point(size=6) +
geom_line(color="black")
df %>%
group_by(`Year of Breach`) %>%
filter(`Year of Breach` != "2020") %>%
summarise(mean(estimated_cost)) %>%
ggplot(aes(x = `Year of Breach`, y = `mean(estimated_cost)`, group = 1)) +
geom_point(size=6) +
geom_line(color="black")
df %>%
group_by(`Year of Breach`) %>%
filter(`Year of Breach` != "2020") %>%
summarise(mean(estimated_cost)) %>%
ggplot(aes(x = `Year of Breach`, y = `mean(estimated_cost)`, group = 1)) +
geom_point(size=6) +
geom_line(color="black") +
scale_y_continuous(labels = scales::label_number_si())
df %>%
group_by(`Year of Breach`) %>%
filter(`Year of Breach` != "2020") %>%
summarise(mean(estimated_cost)) %>%
ggplot(aes(x = `Year of Breach`, y = `mean(estimated_cost)`, group = 1)) +
geom_point(size=6) +
geom_line(color="black") +
scale_y_continuous(labels = scales::label_number_si(prefix="$"))
df %>%
group_by(`Year of Breach`) %>%
summarise(mean(estimated_cost)) %>%
ggplot(aes(x = `Year of Breach`, y = `mean(estimated_cost)`, group = 1)) +
geom_point(size=6) +
geom_line(color="black") +
scale_y_continuous(labels = scales::label_number_si(prefix="$"))
df <- read_csv("PRC Data Breach Chronology - 1.13.20 - PRC Data Breach Chronology - 1.13.20.csv")
df <- df %>%
mutate(`Date Made Public` = as.Date(`Date Made Public`, format = "%m/%d/%Y"))
df$`Year of Breach` <- as.character(df$`Year of Breach`)
df <-
filter(df, `Total Records` > 100)
df <- mutate(df, estimated_cost = df$`Total Records` * 67)
quant <- as_tibble(as.list(quantile(df$estimated_cost, probs=c(.1, .95))))
df <- df %>% filter(estimated_cost > quant$`10%` & estimated_cost < quant$`95%`)
mean(df$estimated_cost)
df <- read_csv("PRC Data Breach Chronology - 1.13.20 - PRC Data Breach Chronology - 1.13.20.csv")
df <- df %>%
mutate(`Date Made Public` = as.Date(`Date Made Public`, format = "%m/%d/%Y"))
df$`Year of Breach` <- as.character(df$`Year of Breach`)
df <-
filter(df, `Total Records` > 100)
df <- mutate(df, estimated_cost = df$`Total Records` * 67)
quant <- as_tibble(as.list(quantile(df$estimated_cost, probs=c(.1, .98))))
df <- df %>% filter(estimated_cost > quant$`10%` & estimated_cost < quant$`98%`)
mean(df$estimated_cost)
ggplot(data = df, mapping = aes(x = `Date Made Public`, y = estimated_cost)) +
geom_point() +
theme_bw(base_size = 15) +
scale_x_date(date_labels = "%Y") +
scale_y_continuous(labels = scales::label_number_si())
df %>%
group_by(`Year of Breach`) %>%
summarise(mean(estimated_cost)) %>%
ggplot(aes(x = `Year of Breach`, y = `mean(estimated_cost)`, group = 1)) +
geom_point(size=6) +
geom_line(color="black") +
scale_y_continuous(labels = scales::label_number_si(prefix="$"))
ggplot(data = df, mapping = aes(x = `Date Made Public`, y = estimated_cost)) +
geom_point() +
theme_bw(base_size = 15) +
scale_x_date(date_labels = "%Y") +
scale_y_continuous(labels = scales::label_number_si())
df %>%
group_by(`Year of Breach`) %>%
summarise(mean(estimated_cost)) %>%
ggplot(aes(x = `Year of Breach`, y = `mean(estimated_cost)`, group = 1)) +
geom_point(size=6) +
geom_line(color="black") +
scale_y_continuous(labels = scales::label_number_si(prefix="$")) +
theme_bw(base_size = 15)
df %>%
group_by(`Year of Breach`) %>%
summarise(mean(estimated_cost)) %>%
filter(`Year of Breach` != "2020") %>%
ggplot(aes(x = `Year of Breach`, y = `mean(estimated_cost)`, group = 1)) +
geom_point(size=6) +
geom_line(color="black") +
scale_y_continuous(labels = scales::label_number_si(prefix="$")) +
theme_bw(base_size = 15)
